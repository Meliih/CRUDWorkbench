@using Entities.Concrete
@using Entities.Concrete.DTO
@model List<ProductDTO>
@{
    ViewData["Title"] = "Ürün Listesi";
}
<div class="d-flex justify-content-between align-items-center">
    <h2 class="mb-0">Ürün Listesi</h2>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#productModal">Ürün Ekle</button>
</div>

<br />

@if (ViewBag.Categories != null)
{

    <form method="post"asp-action="AddProduct" asp-controller="Product"  >
        <div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="productModalLabel">Ürün Ekle</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <div class="modal-body">
                        <div class="form-group">
                            <label for="title">Başlık:</label>
                            <input type="text" class="form-control" id="title" name="title" required>
                        </div>
                        <div class="form-group">
                            <label for="description">Açıklama:</label>
                            <textarea class="form-control" id="description" name="description" required></textarea>
                        </div>
                        <div class="form-group">
                            <label for="stockQuantity">Stok Miktarı:</label>
                            <input type="number" class="form-control" id="stockQuantity" name="stockQuantity" required>
                        </div>
                        <div class="form-group">
                            <label for="categoryId">Kategoriler:</label>
                            <select class="form-control" id="categoryId" name="categoryId" required>
                                @foreach (var category in ViewBag.Categories as List<Category>)
                                {
                                    <option value="@category.CategoryId">@category.Name</option>
                                }
                            </select>
                        </div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                        <button type="submit"  class="btn btn-primary">Ürün Ekle</button>
                    </div>


                </div>
            </div>
        </div>
    </form>
}
@if (ViewBag.SuccessMessage != null)
{
    <div class="alert alert-success" role="alert">
        @ViewBag.SuccessMessage
    </div>
}


<div>
    <form asp-action="SearchProducts" asp-controller="Product" method="get" class="input-group">
        <input type="text" name="searchKeyword" class="form-control" placeholder="Ürün ara...">
        <div class="input-group-append">
            <button type="submit" class="btn btn-outline-secondary">Ara</button>
        </div>
    </form>
    <div>
        <br />
    </div>
    <form asp-action="GetProductsByStockRange" asp-controller="Product" method="get" class="input-group">
        <input type="number" name="min" class="form-control" placeholder="Minimum stok">
        <input type="number" name="max" class="form-control" placeholder="Maksimum stok">
        <div class="input-group-append">
            <button type="submit" class="btn btn-outline-secondary">Ara</button>
        </div>
    </form>

</div>




<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Ürün Adı</th>
            <th>Açıklama</th>
            <th>Stok Miktarı</th>
            <th>Kategori</th>
            <th>Canlı Mı?</th>
            <th>İşlemler</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.Id</td>
                <td>@product.Title</td>
                <td>@product.Description</td>
                <td>@product.StockQuantity</td>
                <td>@product.Name</td>
                <td>@(product.IsLive ? "Evet" : "Hayır")</td>
                <td>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#editProductModal-@product.Id">Düzenle</button>
                    <!-- Düzenleme Modalı -->
                    <form method="post" asp-action="Edit" asp-controller="Product" id="editProductForm-@product.Id">
                        <div class="modal fade" id="editProductModal-@product.Id" tabindex="-1" role="dialog" aria-labelledby="editProductModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="editProductModalLabel">Ürün Düzenle</h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                    
                                            <!-- Düzenleme için gerekli inputlar buraya gelecek -->
                                            
                                            <input type="hidden" id ="productId" name="productId" value="@product.Id" />
                                            <div class="form-group">
                                                <label for="editProductTitle">Ürün Adı</label>
                                                <input type="text" class="form-control" id="editProductTitle-@product.Id" name="editProductTitle" value="@product.Title" />
                                            </div>
                                            <div class="form-group">
                                                <label for="editProductDescription">Açıklama</label>
                                                <input type="text" class="form-control" id="editProductDescription-@product.Id" name="editProductDescription" value="@product.Description" />
                                            </div>
                                            <div class="form-group">
                                                <label for="editProductStockQuantity">Stok Miktarı</label>
                                                <input type="number" class="form-control" id="editProductStockQuantity-@product.Id" name="editProductStockQuantity" value="@product.StockQuantity" />
                                            </div>                                
                                            <div class="form-group">
                                                <label for="editProductCategory">Kategori</label>
                                                <select class="form-control" id="editProductCategory-@product.Id" name="editProductCategory">

                                                    @if (ViewBag.Categories != null)
                                                    {
                                                        @foreach (var category in ViewBag.Categories as List<Category>)
                                                        {
                                                            <option value="@category.CategoryId">@category.Name</option>
                                                        } 
                                                    }
                                                
                                                </select>
                                            </div>
                                            <!-- Diğer inputlar buraya eklenebilir -->
                                       
                                    </div>

                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">İptal</button>
                                        <button type="submit" class="btn btn-primary" >Kaydet</button>
                                    </div>
                                </div>
                            </div>
                        </div> 
                    </form>
                </td>
                <td>
                    <form asp-action="Delete" asp-route-id="@product.Id" method="post" onsubmit="return confirm('Silmek istediğinize emin misiniz?');">
                        <button type="submit" class="btn btn-danger">Sil</button>
                    </form>
                </td>
            </tr>
        }

    </tbody>
</table>

<!-- Düzenleme Modalı -->



<script>

    function addProduct() {
   
        var title = document.getElementById('title').value;
        var description = document.getElementById('description').value;
        var stockQuantity = document.getElementById('stockQuantity').value;
        var category = document.getElementById('categories').value;

        var product = {
            title: title,
            description: description,
            stockQuantity: stockQuantity,
            category: category
        };

       
        $.ajax({
            url: '/Products/AddProduct', 
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(product),
            success: function (response) {
                
                console.log('Ürün başarıyla eklendi:', response);
                
            },
            error: function (xhr, status, error) {
                
                console.error('Ürün eklenirken bir hata oluştu:', error);
            }
        });
    }

    // Get the modal
    var modal = document.getElementById("productModal");

    // Get the button that opens the modal
    var btn = document.getElementById("addProductButton");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // When the user clicks the button, open the modal
    btn.onclick = function () {
        modal.style.display = "block";
    }

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }

    // Handle form submission
    document.getElementById("productForm").addEventListener("submit", function (event) {
        event.preventDefault(); // Prevent default form submission

        // Retrieve form values
        var title = document.getElementById("title").value;
        var description = document.getElementById("description").value;
        var stockQuantity = document.getElementById("stockQuantity").value;
        var categories = document.getElementById("categories").value;

        // You can now use these values to do whatever you need, like sending them to a server, etc.

        // For demonstration, let's just log the values to the console
        console.log("Title:", title);
        console.log("Description:", description);
        console.log("Stock Quantity:", stockQuantity);
        console.log("Categories:", categories);

        // Close the modal
        modal.style.display = "none";
    });

    
    $(document).ready(function () {
        $('#searchForm').submit(function (event) {
            event.preventDefault(); // Formun submit işlemini engelle

            // Formdaki arama anahtar kelimesini al
            var searchKeyword = $('#searchInput').val();

            // AJAX isteği gönder
            $.ajax({
                url: '/Products/Search', // API endpoint'i
                type: 'GET',
                data: { searchKeyword: searchKeyword }, // Arama anahtar kelimesini gönder
                success: function (result) {
                    // Tablo içeriğini güncelle
                    $('#productTable tbody').empty(); // Tablonun içeriğini temizle
                    result.forEach(function (product) {
                        $('#productTable tbody').append('<tr><td>' + product.Id + '</td><td>' + product.Title + '</td><td>' + product.Description + '</td><td>' + product.StockQuantity + '</td><td>' + product.Category + '</td><td>' + (product.IsLive ? 'Evet' : 'Hayır') + '</td></tr>');
                    });
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        });
    });
    <!-- jQuery -->

</script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<!-- Bootstrap CSS -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

<!-- Bootstrap JS -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

